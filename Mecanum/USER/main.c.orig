#include "sys.h"
#include "delay.h"
#include "usart.h"
#include "led.h"
#include "string.h"
 
 


 int main(void)
 {	
	u8 reclen=0;
	delay_init();	    //延时函数初始化	  
	uart_init(9600);	 //串口初始化为9600
	LED_Init();		  	//初始化与LED连接的硬件接口
	LED0=0;
	while(1)
	{
		if(USART_RX_STA&0x8000)
		{				
			reclen=USART_RX_STA&0X7FFF;	//得到数据长度
            USART_RX_BUF[reclen]=0;	 	//加入结束符
            if(reclen==2||reclen==3) 	//控制DS1检测
            {			
				if(strcmp((const char*)USART_RX_BUF,"ON")==0)LED0=0;//打开LED1
				if(strcmp((const char*)USART_RX_BUF,"OFF")==0)LED0=1;//关闭LED1
			}
			USART_RX_STA=0;
		}
	}
 }


 /**
 *****************下面注视的代码是通过调用库函数来实现IO控制的方法*****************************************
int main(void)
{ 
 
	delay_init();		  //初始化延时函数
	LED_Init();		        //初始化LED端口
	while(1)
	{
			GPIO_ResetBits(GPIOB,GPIO_Pin_5);  //LED0对应引脚GPIOB.5拉低，亮  等同LED0=0;
			GPIO_SetBits(GPIOE,GPIO_Pin_5);   //LED1对应引脚GPIOE.5拉高，灭 等同LED1=1;
			delay_ms(300);  		   //延时300ms
			GPIO_SetBits(GPIOB,GPIO_Pin_5);	   //LED0对应引脚GPIOB.5拉高，灭  等同LED0=1;
			GPIO_ResetBits(GPIOE,GPIO_Pin_5); //LED1对应引脚GPIOE.5拉低，亮 等同LED1=0;
			delay_ms(300);                     //延时300ms
	}
} 
 
 ****************************************************************************************************
 ***/
 

	


